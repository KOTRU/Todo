{"version":3,"sources":["components/Todo.js","components/Form.js","components/TaskContainer.js","components/FilterButton.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","useState","isEditing","setEditing","name","newName","setNewName","Date","newDate","setNewDate","classes","makeStyles","theme","root","flexGrow","margin","padding","paper","spacing","background","maxWidth","editBtn","border","borderRadius","boxShadow","color","width","buttonType","textTransform","img","display","maxHeight","useStyles","editingTemplate","noValidate","autoComplete","className","onSubmit","e","preventDefault","editTask","id","Paper","Grid","container","justify","direction","alignItems","item","zeroMinWidth","xs","Typography","noWrap","variant","TextField","required","label","value","onChange","target","style","utils","DateFnsUtils","locale","ruLocale","DateTimePicker","format","Button","onClick","type","viewTemplate","Switch","checked","completed","toggleTaskCompleted","date","disabled","deleteTask","marginTop","Btn","Form","setName","startDate","setStartDate","isCreating","setCreating","creatingTemplate","addTask","alert","invisiblePaper","visibility","taskList","listStyleType","float","TaskContainer","isOpened","setIsOpened","tasksList","tasks","setTasks","filter","map","task","remainingTasks","editedTaskList","updatedTasks","console","log","taskListContentContainer","newTask","nanoid","FilterButton","aria-pressed","isPressed","setFilter","localizedName","createMuiTheme","overrides","MuiCssBaseline","html","WebkitFontSmoothing","FILTER_MAP","All","Active","Completed","FILTER_NAMES","Object","keys","localizedNames","App","filterList","headingText","length","taskContainers","marginLeft","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DATA","ReactDOM","render","StrictMode","Container","document","getElementById"],"mappings":"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","file":"static/js/main.0b481b71.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport ruLocale from \"date-fns/locale/ru\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport { CheckBox } from \"@material-ui/icons\";\nimport Switch from \"@material-ui/core/Switch\";\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState(props.name);\n  const [newDate, setNewDate] = useState(new Date());\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      margin: 0,\n      padding: 0,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      background: \"linear-gradient(45deg, #6bffc3 30%, #abf4d7 90%)\",\n      maxWidth: \"15rem\",\n    },\n    editBtn: {\n      background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n      border: 0,\n      borderRadius: 3,\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n      color: \"white\",\n      width: \"100%\",\n      padding: \"0 30px\",\n    },\n    buttonType: {\n      textTransform: \"none\",\n      padding: 2,\n    },\n    img: {\n      margin: \"auto\",\n      display: \"block\",\n      maxWidth: \"100%\",\n      maxHeight: \"100%\",\n    },\n  }));\n  const classes = useStyles();\n\n  function handleNameChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName, newDate);\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form\n      noValidate\n      autoComplete=\"off\"\n      className={classes.root}\n      onSubmit={handleSubmit}\n    >\n      <Paper className={classes.paper}>\n        <Grid\n          container\n          spacing={1}\n          justify=\"center\"\n          direction=\"column\"\n          alignItems=\"center\"\n        >\n          <Grid item zeroMinWidth xs={12}>\n            <Typography noWrap variant=\"subtitle1\">\n              Изменение {props.name}\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            container\n            spacing={1}\n            alignItems=\"center\"\n            direction=\"row\"\n            xs={12}\n          >\n            <TextField\n              required\n              id=\"standard-required\"\n              label=\"Задача\"\n              value={newName}\n              onChange={handleNameChange}\n              style={{ width: \"100%\" }}\n            />\n            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\n              <DateTimePicker\n                value={newDate}\n                onChange={setNewDate}\n                format=\"d MMM yyyy\"\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n          <Grid container item spacing={1} justify=\"center\" xs={12}>\n            <Grid item xs={12}>\n              <Button\n                className={classes.editBtn}\n                onClick={() => setEditing(false)}\n              >\n                <Typography className={classes.buttonType} variant=\"button\">\n                  Отмена\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12}>\n              <Button type=\"submit\" className={classes.editBtn}>\n                <Typography className={classes.buttonType} variant=\"button\">\n                  Сохранить\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </form>\n  );\n  const viewTemplate = (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid\n          container\n          spacing={1}\n          justify=\"center\"\n          direction=\"column\"\n          alignItems=\"center\"\n        >\n          <Grid\n            item\n            container\n            spacing={1}\n            justify=\"center\"\n            alignItems=\"center\"\n            direction=\"row\"\n            xs={12}\n          >\n            <Grid item xs={3}>\n              <Switch\n                color=\"primary\"\n                checked={props.completed}\n                onChange={() => props.toggleTaskCompleted(props.id)}\n              ></Switch>\n            </Grid>\n            <Grid item zeroMinWidth xs={9}>\n              <Typography noWrap variant=\"subtitle1\">\n                {props.name}\n              </Typography>\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\n                <DateTimePicker\n                  value={props.date}\n                  disabled\n                  format=\"d MMM yyyy HH mm\"\n                />\n              </MuiPickersUtilsProvider>{\" \"}\n            </Grid>\n          </Grid>\n          <Grid container item spacing={1} justify=\"center\" xs={12}>\n            <Grid item xs={12}>\n              <Button\n                className={classes.editBtn}\n                onClick={() => setEditing(true)}\n              >\n                <Typography className={classes.buttonType} variant=\"button\">\n                  Изменить\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                className={classes.editBtn}\n                onClick={() => props.deleteTask(props.id)}\n              >\n                <Typography className={classes.buttonType} variant=\"button\">\n                  Удалить\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n  return isEditing ? editingTemplate : viewTemplate;\n}\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport ruLocale from \"date-fns/locale/ru\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    margin: 0,\n    padding: 0,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    background: \"linear-gradient(45deg, #6bffc3 30%, #abf4d7 90%)\",\n    marginTop: \"1.5rem\",\n    maxWidth: \"15rem\",\n  },\n  Btn: {\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n    border: 0,\n    borderRadius: 3,\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n    color: \"white\",\n    width: \"100%\",\n    padding: \"0 30px\",\n  },\n  buttonType: {\n    textTransform: \"none\",\n    padding: 2,\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n}));\n\nexport default function Form(props) {\n  const [name, setName] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [isCreating, setCreating] = useState(false);\n\n  const classes = useStyles();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (name === \"\") {\n      alert(\"Введите название\");\n      return;\n    }\n    props.addTask(name, startDate);\n    setName(\"\");\n  }\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  const creatingTemplate = (\n    <form\n      noValidate\n      autoComplete=\"off\"\n      className={classes.root}\n      onSubmit={handleSubmit}\n    >\n      <Paper className={classes.paper}>\n        <Grid\n          container\n          spacing={1}\n          justify=\"center\"\n          direction=\"column\"\n          alignItems=\"center\"\n        >\n          <Grid\n            item\n            container\n            spacing={1}\n            alignItems=\"center\"\n            direction=\"row\"\n            xs={12}\n          >\n            <TextField\n              required\n              id=\"standard-required\"\n              label=\"Задача\"\n              value={name}\n              onChange={handleNameChange}\n              style={{ width: \"100%\" }}\n            />\n            <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\n              <DateTimePicker\n                value={startDate}\n                onChange={setStartDate}\n                format=\"d MMM yyyy\"\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n          <Grid container item spacing={1} justify=\"center\" xs={12}>\n            <Grid item xs={12}>\n              <Button\n                className={classes.Btn}\n                onClick={() => setCreating(false)}\n              >\n                <Typography className={classes.buttonType} variant=\"button\">\n                  Отмена\n                </Typography>\n              </Button>\n            </Grid>\n            <Grid item xs={12}>\n              <Button type=\"submit\" className={classes.Btn}>\n                <Typography className={classes.buttonType} variant=\"button\">\n                  Добавить\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </form>\n  );\n  const viewTemplate = (\n    <Button className={classes.Btn} onClick={() => setCreating(true)}>\n      <Typography className={classes.buttonType} variant=\"button\">\n         Добавить\n      </Typography>\n    </Button>\n  );\n  return isCreating ? creatingTemplate : viewTemplate;\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Todo from \"./Todo\";\nimport Form from \"./Form\";\nimport { Button } from \"@material-ui/core\";\n\nimport { nanoid } from \"nanoid\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: 0,\n    margin: 0,\n  },\n  paper: {\n    padding: 0,\n    maxWidth: \"15rem\",\n  },\n  invisiblePaper: {\n    visibility: \"hidden\",\n  },\n  taskList: {\n    listStyleType: \"none\",\n    padding: 0,\n    margin: 0,\n  },\n  buttonType: {\n    textTransform: \"none\",\n    padding: 2,\n  },\n  Btn: {\n    border: 0,\n    borderRadius: 3,\n    width: \"100%\",\n    margin: 0,\n    display: \"block\",\n    float: \"left\",\n  },\n}));\n\nexport default function TaskContainer(props) {\n  const [isOpened, setIsOpened] = useState(true);\n  const [name, setName] = useState(\"\");\n  const [tasks, setTasks] = useState(props.tasksList);\n\n  const classes = useStyles();\n  const taskList = tasks.filter(props.filter).map((task) => (\n    <Grid item xs={12} key={task.id}>\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        date={task.date}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    </Grid>\n  ));\n  function addTask(name, date) {\n    const newTask = {\n      id: \"id\" + nanoid(),\n      name: name,\n      completed: false,\n      date: date,\n    };\n    setTasks([...tasks, newTask]);\n  }\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n  }\n  function editTask(id, newName, newDate) {\n    const editedTaskList = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, name: newName, date: newDate };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n  console.log(tasks);\n  var taskListContentContainer = (\n    <Grid\n      item\n      container\n      xs={12}\n      spacing={1}\n      justify=\"center\"\n      direction=\"column\"\n      alignItems=\"center\"\n    >\n      <Grid\n        item\n        container\n        xs={12}\n        spacing={2}\n        justify=\"center\"\n        direction=\"column\"\n        alignItems=\"center\"\n      >\n        {taskList}\n      </Grid>\n      <Grid item xs={12}>\n        <Form addTask={addTask} />\n      </Grid>\n    </Grid>\n  );\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container direction=\"column\">\n          <Grid item xs={12}>\n            <Button\n              className={classes.Btn}\n              onClick={() => setIsOpened(!isOpened)}\n            >\n              <Typography className={classes.buttonType} variant=\"button\">\n                {props.name}\n              </Typography>\n            </Button>\n          </Grid>\n          {isOpened && taskListContentContainer}\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function FilterButton(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      <span className=\"visually-hidden\">Показать </span>\n      <span>{props.localizedName}</span>\n      <span className=\"visually-hidden\"> задачи</span>\n    </button>\n  );\n}\n","import TaskContainer from \"./components/TaskContainer\";\nimport FilterButton from \"./components/FilterButton\";\nimport React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nconst theme = createMuiTheme({\n  overrides: {\n    MuiCssBaseline: {\n      \"@global\": {\n        html: {\n          WebkitFontSmoothing: \"auto\",\n        },\n      },\n    },\n  },\n});\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed,\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\nconst localizedNames = {\n  All: \"все\",\n  Active: \"активные\",\n  Completed: \"завершенные\",\n};\nfunction App(props) {\n  const [filter, setFilter] = useState(\"All\");\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <Grid item xs={4} key={nanoid()}>\n      <FilterButton\n        key={name}\n        localizedName={localizedNames[name]}\n        name={name}\n        isPressed={name === filter}\n        setFilter={setFilter}\n      />\n    </Grid>\n  ));\n  const headingText = `Списков -  ${props.tasks.length} `;\n  const taskContainers = props.tasks.map((container) => (\n    <li style={{ float: \"left\", marginLeft: \"1rem\" }} key={nanoid()}>\n      <TaskContainer\n        name={container.taskList}\n        tasksList={container.tasks}\n        filter={FILTER_MAP[filter]}\n      />\n    </li>\n  ));\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div>\n        <h1>Что надо сделать</h1>\n        <div>\n          <h3>Фильтры</h3>\n          <Grid container>{filterList}</Grid>\n        </div>\n        <h2 id=\"list-heading\">{headingText}</h2>\n        <ul style={{ listStyleType: \"none\" }}> {taskContainers}</ul>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { nanoid } from \"nanoid\";\n\nconst DATA = [\n  {\n    taskList: \"Начнем\",\n    tasks: [\n      {\n        id: \"id\" + nanoid(),\n        name: \"Eat\",\n        completed: true,\n        date: new Date(),\n      },\n      {\n        id: \"id\" + nanoid(),\n        name: \"312312312312312312312312312312312312312312312312\",\n        completed: false,\n        date: new Date(),\n      },\n      {\n        id: \"id\" + nanoid(),\n        name: \"Sleep\",\n        completed: false,\n        date: new Date(),\n      },\n    ],\n  },\n  {\n    taskList: \"Продолжим\",\n    tasks: [\n      {\n        id: \"id\" + nanoid(),\n        name: \"Eat\",\n        completed: true,\n        date: new Date(),\n      },\n      {\n        id: \"id\" + nanoid(),\n        name: \"312312312312312312312312312312312312312312312312\",\n        completed: false,\n        date: new Date(),\n      },\n      {\n        id: \"id\" + nanoid(),\n        name: \"Sleep\",\n        completed: false,\n        date: new Date(),\n      },\n    ],\n  },\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <Container maxWidth=\"sm\">\n      <App tasks={DATA} />\n    </Container>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}